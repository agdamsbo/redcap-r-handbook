[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "REDCap R Handbook",
    "section": "",
    "text": "Preface\nThis is a handbook on working with REDCap in R.\nThe book is written out of necessity as documentation for new undergraduate students to work in R with study data stored in a REDCap data base. From this have evolved the desire to share experiences on building and managing databases in REDCap with R.\nThe goal is to write a handbook for new researchers working with REDCap and R and to have a reference for more experienced users. The book will be heavy on examples and suggestions to best practice.\nA comprehensive overview of tools for working with REDCap databases can be found here: REDCap-tools repository."
  },
  {
    "objectID": "index.html#sec-a-niche",
    "href": "index.html#sec-a-niche",
    "title": "REDCap R Handbook",
    "section": "A niche?",
    "text": "A niche?\nIn my work with REDCap, in building databases and working with data, I have been very happy working in R. This helps to ensure reproducible work and gives better overview, when working with larger databases, or when using a dataset or variable description as the foundation for the database. The last is most often the case.\nThere are many guidelines for working with the graphical interface, but I’ve not been able to find much guidance for working through the REDCap API in R. This book tries to fill that niche."
  },
  {
    "objectID": "index.html#sec-contribute",
    "href": "index.html#sec-contribute",
    "title": "REDCap R Handbook",
    "section": "Contribute",
    "text": "Contribute\nThis book is open source and shared under a GPL-3 license. Contributions are very welcome. Please write the author, comment or create a PR on GitHub.\nThe book is written in Quarto in RStudio."
  },
  {
    "objectID": "access.html#sec-getting-access",
    "href": "access.html#sec-getting-access",
    "title": "1  Data access",
    "section": "1.1 Getting access",
    "text": "1.1 Getting access\nBefore you are able to get any data out of REDCap, make sure that you are able to get in. After you are logged in, make sure, that you have permissions to get an API-key. The API-key is a alpha-numeric key used to verify yourself to the REDCap server, when requesting data export.\nThe API key equals user name and password, and circumvents the two-factor verification process. Naturally, the API key should be kept in a safe way.\n\n\n\n\n\n\nWarning\n\n\n\nTo be clear: NEVER STORE THE API-KEY AS PLAIN TEXT.\n\n\nThe library(keyring)(Csárdi 2022) offers a safe and easy way to store API keys and other secrets. Please copy and run the code below:\n\nrequire(keyring)\nkey_set(\"API_KEY\", prompt = \"API key: \")\n\n\nkey_set(\"DB_URI\", prompt = \"Data base uri: \")\n\nDo note, that the name “API_KEY” can be changed to whatever you prefer. Note that the function will overwrite any existing keys with the same name without any warning (!)."
  },
  {
    "objectID": "access.html#sec-downloading-data",
    "href": "access.html#sec-downloading-data",
    "title": "1  Data access",
    "section": "1.2 ",
    "text": "1.2 \n\n\n\n\nBeasley, Will. 2022. REDCapR: Interaction Between r and REDCap. https://CRAN.R-project.org/package=REDCapR.\n\n\nCsárdi, Gábor. 2022. Keyring: Access the System Credential Store from r. https://CRAN.R-project.org/package=keyring."
  },
  {
    "objectID": "datahandling.html",
    "href": "datahandling.html",
    "title": "Handling data from a database",
    "section": "",
    "text": "In this chapter I will discuss different approaches to acquiring and handling data from a REDCap database."
  },
  {
    "objectID": "acquisition.html",
    "href": "acquisition.html",
    "title": "2  Downloading data",
    "section": "",
    "text": "Please make sure to read the previous chapter on how to getting access to the database.\nUsing the REDCap API to access and download data from a database, there are two different approaches:\n\nA focused, “get what you need”-approach and\na more simple “get it all”-approach\n\nWorking with longitudinal projects and/or repeated instruments will result in castellated dataset. The package library(REDCapTidieR)(Hanna, Kadauke, and Porter 2023) provides a solution to the castellation, but downloads full instruments, which is not always desirable.\nIn the following, the two approaches will be demonstrated including a possible third approach, requiring a little more technical willingness.\n\n2.0.1 Focus\nThere are different packages to access and download data from R. In the , available tools and packages are referenced. Here I will provide an example, as to download minimal data in a focused way, using REDCapR.(Beasley 2022).\nPlease have a look in the REDCap-chapter for an optimised approach when handling events and repeated instruments.\n\nlibrary(REDCapR)\n# Returns the variables \"record_id\" and \"age\".\nds_some_vars &lt;- redcap_read(\n  redcap_uri   = keyring::key_get(\"DB_URI\"),  # This is the address for projects at the AU-server\n  token        = keyring::key_get(\"API_KEY\"),\n  fields       = c(\"record_id\", \"age\")\n)$data \n\n# Return only records with IDs of 1 and 4\nds_some_rows &lt;- redcap_read(\n  redcap_uri   = keyring::key_get(\"DB_URI\"),  # This is the address for projects at the AU-server\n  token        = keyring::key_get(\"API_KEY\"),\n  records      = c(1, 4)\n)$data\n\nTo get a full list of available variable names, you can either go through the codebook on REDCap, or you can try the following, but be aware, that the resulting vector of variable names can get a little long and confusing.\n\n# Returns a vector of names of all accessible variables.\nvariable_names &lt;- redcap_read(\n  redcap_uri   = keyring::key_get(\"DB_URI\"),  # This is the address for projects at the AU-server\n  token        = keyring::key_get(\"API_KEY\")\n)$data |&gt; \n  colnames()\n\nHere is an example on how to export data on RBANS and cleaning the data for plotting.\n\nds &lt;- redcap_read(\n  redcap_uri   = keyring::key_get(\"DB_URI\"),  # This is the address for projects at the AU-server\n  token        = keyring::key_get(\"API_KEY\"),\n  records      = c(1:35), # Downloading data from ID 1 to 35.\n  forms        = \"rbans\", # Downloading only the RBANS instrument\n  event        = c(\"3_months_arm_1\", # Specifying only to download 3 and 12 months data\n                   \"12_months_arm_1\")\n  )$data |&gt; \n  select( # Selecting variables to keep\n    c(\"record_id\",\n      \"redcap_event_name\",\n      ends_with(c(\"_is\",\"_lo\",\"_up\",\"_per\"))) # I only want index scores, lower and upper CIs and percentile.\n         )   |&gt; \n  na.omit() # Omitting IDs with missing data.\nhead(ds, n = 5) # Showing only the first 5 rows\n\nFurther examples and scripts can be found in the ENIGMA code repository.\n\n\n2.0.2 All at once\n\n\n2.0.3 The middle ground\n\n\n\n\nBeasley, Will. 2022. REDCapR: Interaction Between r and REDCap. https://CRAN.R-project.org/package=REDCapR.\n\n\nHanna, Richard, Stephan Kadauke, and Ezra Porter. 2023. REDCapTidieR: Extract REDCap Databases into Tidy ’Tibble’s. https://CRAN.R-project.org/package=REDCapTidieR."
  },
  {
    "objectID": "database.html",
    "href": "database.html",
    "title": "Building databases",
    "section": "",
    "text": "In the following chapters I will go through different approaches to building databases."
  },
  {
    "objectID": "dataset.html#upload-data-to-the-project",
    "href": "dataset.html#upload-data-to-the-project",
    "title": "3  Database from dataset",
    "section": "3.1 Upload data to the project",
    "text": "3.1 Upload data to the project\n\nREDCapR::redcap_write(ds_to_write = dd,\n                      redcap_uri = keyring::key_get(\"DB_URI\"),\n                      token = keyring::key_get(\"example_api\"))"
  },
  {
    "objectID": "scratch.html#upload-data-to-the-project",
    "href": "scratch.html#upload-data-to-the-project",
    "title": "4  Database from scratch",
    "section": "4.1 Upload data to the project",
    "text": "4.1 Upload data to the project\n\nREDCapR::redcap_read_oneshot(redcap_uri = keyring::key_get(\"DB_URI\"),\n                             token = keyring::key_get(\"example_api\"))\n\n\nREDCapR::redcap_write(ds_to_write = df,\n                      redcap_uri = keyring::key_get(\"DB_URI\"),\n                      token = keyring::key_get(\"example_api\"))"
  },
  {
    "objectID": "scratch.html#coming-up",
    "href": "scratch.html#coming-up",
    "title": "4  Database from scratch",
    "section": "4.2 Coming up",
    "text": "4.2 Coming up\n\nRewrite of chapter to a more generel use case\nTips for branching and calculations\nmore…"
  },
  {
    "objectID": "advanced.html#section",
    "href": "advanced.html#section",
    "title": "5  Advanced functions",
    "section": "5.1 ",
    "text": "5.1"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Beasley, Will. 2022. REDCapR: Interaction Between r and REDCap.\nhttps://CRAN.R-project.org/package=REDCapR.\n\n\nCsárdi, Gábor. 2022. Keyring: Access the System Credential Store\nfrom r. https://CRAN.R-project.org/package=keyring.\n\n\nHanna, Richard, Stephan Kadauke, and Ezra Porter. 2023.\nREDCapTidieR: Extract REDCap Databases into Tidy ’Tibble’s. https://CRAN.R-project.org/package=REDCapTidieR."
  },
  {
    "objectID": "appendix.html",
    "href": "appendix.html",
    "title": "Appendix",
    "section": "",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2 compiler_4.2.1    fastmap_1.1.1     cli_3.6.1        \n [5] tools_4.2.1       htmltools_0.5.5   rstudioapi_0.14   rmarkdown_2.21   \n [9] knitr_1.42        jsonlite_1.8.4    xfun_0.39         digest_0.6.31    \n[13] rlang_1.1.0       evaluate_0.20"
  }
]